"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[year]/[subject]/assignments-sol/[assignment]/page",{

/***/ "(app-pages-browser)/./egcontent/assignmentscontent.js":
/*!*****************************************!*\
  !*** ./egcontent/assignmentscontent.js ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n// Comprehensive data array containing assignments 1-6\nconst assignmentsData = [\n    // Assignment 1 - Conic Sections\n    {\n        id: \"assignment1\",\n        title: \"Conic Sections\",\n        description: \"Understanding ellipses, parabolas and hyperbolas\",\n        questions: [\n            {\n                id: 1,\n                text: \"Define : (i) Ellipse (ii) Parabola (iii) Hyperbola\",\n                answer: {\n                    ellipse: \"An ellipse is the locus of all those points in a plane such that the sum of their distances from two fixed points in the plane, is constant. The fixed points are known as the foci (singular focus), which are surrounded by the curve. The fixed line is directrix and the constant ratio is eccentricity of ellipse.\",\n                    parabola: \"A parabola is defined as a set of points in a plane which are equidistant from a straight line or directrix and focus. The hyperbola can be defined as the difference of distances between a set of points, which are present in a plane to two fixed points, is a positive constant. A parabola has single focus and directrix.\",\n                    hyperbola: \"A hyperbola is an open curve with two branches, the intersection of a plane with both halves of a double cone.\"\n                },\n                imagePath: null\n            },\n            {\n                id: 2,\n                text: \"Construct Ellipse to be inscribed in a parallelogram of dimension 100 mm and 70 mm. 75\\xb0 inclined with horizontal.\",\n                answer: null,\n                imagePath: \"/images/a1d2.jpg\"\n            },\n            {\n                id: 3,\n                text: \"Draw an Ellipse having major axis 120 mm and minor axis 80 mm. Use Oblong method.\",\n                answer: null,\n                imagePath: \"/images/a1d3.jpg\"\n            },\n            {\n                id: 4,\n                text: \"If Base is 130 mm and axis length 85 mm, draw parabola by rectangle method.\",\n                answer: null,\n                imagePath: \"/images/a1d4.jpg\"\n            },\n            {\n                id: 5,\n                text: \"Draw the parabola by Tangent method with base = 120 mm and Axis length =85 mm.\",\n                answer: null,\n                imagePath: \"/images/a1d5.jpg\"\n            },\n            {\n                id: 6,\n                text: \"Motor car head lamp parabolic reflector is having an aperture (opening) of 175 mm and a depth of 135 mm. Draw the shape of the reflector.\",\n                answer: null,\n                imagePath: \"/images/a1d6.jpg\"\n            }\n        ]\n    },\n    // Assignment 2 - Curves\n    {\n        id: \"assignment2\",\n        title: \"Special Curves\",\n        description: \"Understanding cycloids, involutes and spirals\",\n        questions: [\n            {\n                id: 1,\n                text: \"Define : (i) Cycloid (ii) Hypocycloid (iii) Epicycloid (iv) Involute\",\n                answer: {\n                    cycloid: \"A cycloid is the curve traced by a point on a circle as it rolls along a straight line without slipping.\",\n                    hypocycloid: \"A hypocycloid is a special plane curve generated by the trace of a fixed point on a small circle that rolls within a larger circle. As the radius of the larger circle is increased, the hypocycloid becomes more like the cycloid created by rolling a circle on a line.\",\n                    epicycloid: \"An epicycloid is a plane curve created by tracing a chosen point on the edge of a circle of radius r rolling on the outside of a circle of radius R.\",\n                    involute: \"The involute is defined as the path of a point on a straight line which rolls without slipping along the circumference of a cylinder. The involute curve will be required for the construction of gear teeth.\"\n                },\n                imagePath: null\n            },\n            {\n                id: 2,\n                text: \"A circle of 30 mm radius is rolling on a straight line without slip. Point P is at the point of contact between generating circle and directing line. Draw the locus of point P and name the curve.\",\n                answer: null,\n                imagePath: \"/images/a2d2.jpg\"\n            },\n            {\n                id: 3,\n                text: \"Construct 3 convolution of the involute of 10 mm longline.\",\n                answer: null,\n                imagePath: \"/images/a2d3.jpg\"\n            },\n            {\n                id: 4,\n                text: \"Show graphically that the hypocycloid is a straight line. When diameter of rolling circle is half of the directing circle.\",\n                answer: null,\n                imagePath: \"/images/a2d4.jpg\"\n            },\n            {\n                id: 5,\n                text: \"Draw an Involute for a semi-circle of radius 25mm.\",\n                answer: null,\n                imagePath: \"/images/a2d5.jpg\"\n            },\n            {\n                id: 6,\n                text: \"Construct the Archemedian Spiral of two convolutions. The largest radius is 100 mm and the smallest radius is 20 mm.\",\n                answer: null,\n                imagePath: \"/images/a2d6.jpg\"\n            }\n        ]\n    },\n    // Assignment 3 - Projections I\n    {\n        id: \"assignment3\",\n        title: \"Projections I\",\n        description: \"Understanding projections of geometric solids\",\n        questions: [\n            {\n                id: 1,\n                text: \"A pentagonal prism, base 30 mm side and axis 70 mm long, is resting on its base on the HP with an edge of the base parallel to the VP. Draw its projections.\",\n                answer: null,\n                imagePath: \"/images/a3d1.jpg\"\n            },\n            {\n                id: 2,\n                text: \"A hexagonal pyramid, base 25 mm side and axis 60 mm long, is resting on its base on the HP with an edge of the base parallel to the VP. Draw its projections.\",\n                answer: null,\n                imagePath: \"/images/a3d2.jpg\"\n            },\n            {\n                id: 3,\n                text: \"A cylinder, base 50 mm diameter and axis 70 mm long, is resting on its base on the HP. Draw its projections when the axis is inclined at 30\\xb0 to the VP.\",\n                answer: null,\n                imagePath: \"/images/a3d3.jpg\"\n            },\n            {\n                id: 4,\n                text: \"A square prism, base 40 mm side and axis 100 mm long, has its axis inclined at 45\\xb0 to the HP and parallel to the VP. Draw its projections.\",\n                answer: null,\n                imagePath: \"/images/a3d4.jpg\"\n            },\n            {\n                id: 5,\n                text: \"A triangular prism, base 30 mm side and axis 70 mm long, is resting on its base on the HP with a side of the base perpendicular to the VP. Draw its projections.\",\n                answer: null,\n                imagePath: \"/images/a3d5.jpg\"\n            }\n        ]\n    },\n    // Assignment 4 - Projections II\n    {\n        id: \"assignment4\",\n        title: \"Projections II\",\n        description: \"Advanced projections of geometric solids\",\n        questions: [\n            {\n                id: 1,\n                text: \"A hexagonal prism, base 30 mm side and axis 80 mm long, is resting on its base on the HP with a side of the base parallel to the VP. Draw its projections.\",\n                answer: null,\n                imagePath: \"/images/a4d1.jpg\"\n            },\n            {\n                id: 2,\n                text: \"A triangular prism, base 30 mm side and axis 70 mm long, is resting on its base on the HP with a side of the base perpendicular to the VP. Draw its projections.\",\n                answer: null,\n                imagePath: \"/images/a4d2.jpg\"\n            },\n            {\n                id: 3,\n                text: \"A cone, base 75 mm diameter and axis 100 mm long, is lying on the ground on one of its generators with the axis parallel to the VP. Draw its projections.\",\n                answer: null,\n                imagePath: \"/images/a4d3.jpg\"\n            },\n            {\n                id: 4,\n                text: \"A square prism, base 40 mm side and axis 100 mm long, has its axis inclined at 45\\xb0 to the HP and parallel to the VP. Draw its projections.\",\n                answer: null,\n                imagePath: \"/images/a4d4.jpg\"\n            },\n            {\n                id: 5,\n                text: \"A pentagonal prism, base 30 mm side and axis 70 mm long, is resting on its base on the HP with an edge of the base parallel to the VP. Draw its projections.\",\n                answer: null,\n                imagePath: \"/images/a4d5.jpg\"\n            }\n        ]\n    },\n    // Assignment 5 - Projections III\n    {\n        id: \"assignment5\",\n        title: \"Projections III\",\n        description: \"Complex projections of geometric solids with varied orientations\",\n        questions: [\n            {\n                id: 1,\n                text: \"A triangular prism, base 30 mm side and axis 70 mm long, is resting on its base on the HP with a side of the base perpendicular to the VP. Draw its projections.\",\n                answer: \"This problem involves creating orthographic projections of a triangular prism in a specific orientation. The prism has an equilateral triangular base with 30 mm sides and a height (axis length) of 70 mm. When positioned on the Horizontal Plane with one side perpendicular to the Vertical Plane, the front view will show a rectangle, while the top view displays an equilateral triangle with one side perpendicular to the VP.\",\n                imagePath: \"/images/a5d1.jpg\"\n            },\n            {\n                id: 2,\n                text: \"A cone, base 75 mm diameter and axis 100 mm long, is lying on the ground on one of its generators with the axis parallel to the VP. Draw its projections.\",\n                answer: \"This projection shows a cone (75 mm base diameter, 100 mm axis) in an inclined position, resting on one of its generators (a line from apex to base circumference). The axis is parallel to the VP, creating a front view showing the true shape of the triangular section, while the top view displays an elliptical shape due to the inclined position of the circular base.\",\n                imagePath: \"/images/a5d2.jpg\"\n            },\n            {\n                id: 3,\n                text: \"A square prism, base 40 mm side and axis 100 mm long, has its axis inclined at 45\\xb0 to the HP and parallel to the VP. Draw its projections.\",\n                answer: \"This drawing shows the projections of a square prism (40 mm square base, 100 mm height) with its axis inclined at 45\\xb0 to the Horizontal Plane while remaining parallel to the Vertical Plane. The front view displays the true length of the axis and the apparent width of the prism, while the top view shows a distorted projection of the square base due to the inclination.\",\n                imagePath: \"/images/a5d3.jpg\"\n            },\n            {\n                id: 4,\n                text: \"A pentagonal prism, base 30 mm side and axis 70 mm long, is resting on its base on the HP with an edge of the base parallel to the VP. Draw its projections.\",\n                answer: \"This projection illustrates a pentagonal prism with a regular pentagon base (30 mm sides) and 70 mm height, positioned with its base on the Horizontal Plane and one edge of the base parallel to the Vertical Plane. The front view shows a rectangle with the true height, while the top view displays the true shape of the pentagonal base with one edge parallel to the VP.\",\n                imagePath: \"/images/a5d4.jpg\"\n            }\n        ]\n    },\n    // Assignment 6 - Orthographic Projections\n    {\n        id: \"assignment6\",\n        title: \"Orthographic Projections\",\n        description: \"Creating standardized multi-view technical drawings using projection methods\",\n        questions: [\n            {\n                id: 1,\n                text: \"Draw (i) Elevation (ii) Plan (iii) RHSV by First angle method\",\n                answer: \"This problem involves creating a complete set of orthographic views using first angle projection method. The solution shows the front elevation (front view), plan (top view), and right-hand side view of the given object. First angle projection places the views opposite to the direction of sight, with the plan above the elevation and the right side view to the left of the elevation.\",\n                imagePath: \"/images/a6d1.jpg\",\n                questionImage: \"/images/a6q1d1.jpg\"\n            },\n            {\n                id: 2,\n                text: \"Draw (i) Front View (ii) Top view (iii) LHSV by 3rd angle method\",\n                answer: \"This drawing demonstrates third angle projection method, showing front view, top view, and left-hand side view of the object. In third angle projection (predominantly used in North America), views are placed in the same direction as the line of sight, with the top view positioned above the front view and the left side view placed to the right of the front view.\",\n                imagePath: \"/images/a6d2.jpg\",\n                questionImage: \"/images/a6q2d2.jpg\"\n            },\n            {\n                id: 3,\n                text: \"Draw (i) Front view (ii) TV (iii) LHSV by first angle method.\",\n                answer: \"This solution presents orthographic views using first angle projection (commonly used in Europe and Asia). It shows the front view, top view (TV), and left-hand side view (LHSV) of the given object. In first angle projection, the views are positioned opposite to the viewing direction, creating a standard arrangement for technical drawings.\",\n                imagePath: \"/images/a6d3.jpg\",\n                questionImage: \"/images/a6q3d3.jpg\"\n            },\n            {\n                id: 4,\n                text: \"Draw (i) Full sectional Elevation (ii) Plan (iii) LHSV by Third angle method.\",\n                answer: \"This drawing showcases a full sectional elevation along with plan and left-hand side view using third angle projection. The sectional view reveals the internal features of the object by showing it cut along a specific plane. Third angle projection arranges the views in the same direction as the line of sight, providing clarity in technical drawings.\",\n                imagePath: \"/images/a6d4.jpg\",\n                questionImage: \"/images/a6q4d4.jpg\"\n            },\n            {\n                id: 5,\n                text: \"Draw (i) Elevation (ii) Plan (iii) RHSV by First angle method.\",\n                answer: \"This solution illustrates the front elevation, plan view, and right-hand side view of the object using first angle projection method. The drawing follows standard conventions of first angle projection where views are positioned opposite to the viewing direction, creating a comprehensive representation of the three-dimensional object on a two-dimensional plane.\",\n                imagePath: \"/images/a6d5.jpg\",\n                questionImage: \"/images/a6q5d5.jpg\"\n            },\n            {\n                id: 6,\n                text: \"Draw (i) Front View (ii) Top view (iii) LHSV by first angle method.\",\n                answer: \"This drawing presents the front view, top view, and left-hand side view of the given object using first angle projection method. The views are arranged following the standard conventions of first angle projection, where the top view is positioned above the front view and the left side view is placed to the right of the front view.\",\n                imagePath: \"/images/a6d6.jpg\",\n                questionImage: \"/images/a6q6d6.jpg\"\n            },\n            {\n                id: 7,\n                text: \"Draw (i) Elevation (ii) Plan (iii) RHSV by First angle method.\",\n                answer: \"This solution shows the front elevation, plan view, and right-hand side view of the object using first angle projection method. The drawing demonstrates how the three principal views relate to each other in space, providing a complete description of the object's geometry following international standards for technical drawings.\",\n                imagePath: \"/images/a6d7.jpg\",\n                questionImage: \"/images/a6q7d7.jpg\"\n            },\n            {\n                id: 8,\n                text: \"Draw (i) Front view (ii) Top view (iii) LHSV, by first angle method\",\n                answer: \"This drawing illustrates the front view, top view, and left-hand side view of the given object using first angle projection method. The solution adheres to standardized conventions for engineering drawings, showing how the object appears from different orthogonal viewpoints for comprehensive documentation of its three-dimensional form.\",\n                imagePath: \"/images/a6d8.jpg\",\n                questionImage: \"/images/a6q8d8.jpg\"\n            }\n        ]\n    },\n    // Assignment 7 - Sectional Views\n    {\n        id: \"assignment7\",\n        title: \"Sectional Views\",\n        description: \"Creating detailed sectional views using orthographic projection methods\",\n        questions: [\n            {\n                id: 1,\n                text: \"By first angle method, draw (i) front view (ii) top view (iii) full sectional RHSV.\",\n                answer: \"This drawing demonstrates a complete first angle projection with emphasis on the sectional right-hand side view. The front and top views show the external features of the component, while the sectional RHSV reveals internal details by showing the object as if cut by a vertical plane. First angle projection positions the RHSV to the left of the front view, following international drafting standards.\",\n                imagePath: \"/images/a7d1.jpg\",\n                questionImage: \"/images/a7q1d1.jpg\"\n            },\n            {\n                id: 2,\n                text: \"Draw (i) Full sectional FV (ii)TV (iii) LHSV, by first angle method.\",\n                answer: \"This solution presents a full sectional front view along with top view and left-hand side view using first angle projection. The sectional front view exposes the internal configuration by showing the object cut along a vertical plane, while the top and left-hand side views complement the representation. First angle projection arranges these views in a standardized pattern for technical documentation.\",\n                imagePath: \"/images/a7d2.jpg\",\n                questionImage: \"/images/a7q2d2.jpg\"\n            },\n            {\n                id: 3,\n                text: \"By third angle method, draw (i) full sectional front view (ii) top view (iii) LHSV.\",\n                answer: \"This projection utilizes the third angle method to create a comprehensive view of the object with a sectional front view. The sectional representation exposes the internal features by cutting the object with a viewing plane, while the top and left-hand side views follow third angle convention where views are arranged in the direction of sight (top view above front view, LHSV to the right).\",\n                imagePath: \"/images/a7d3.jpg\",\n                questionImage: \"/images/a7q3d3.jpg\"\n            },\n            {\n                id: 4,\n                text: \"By third angle method, draw (i) full sectional front view (ii) top view (iii) RHSV.\",\n                answer: \"This drawing shows a complete third angle projection with a full sectional front view revealing the object's internal structure. The top view and right-hand side view complement the sectional representation, following third angle conventions where the top view is placed above the front view and the RHSV is positioned to the left of the front view, creating a comprehensive technical representation.\",\n                imagePath: \"/images/a7d4.jpg\",\n                questionImage: \"/images/a7q4d4.jpg\"\n            }\n        ]\n    },\n    // Assignment 8 - Isometric Projections\n    {\n        id: \"assignment8\",\n        title: \"Isometric Projections\",\n        description: \"Converting orthographic views to pictorial isometric representations\",\n        questions: [\n            {\n                id: 1,\n                text: \"Figure shows Elevation and Plan of an object, Draw isometric view.\",\n                answer: \"This solution demonstrates the conversion of 2D orthographic views (elevation and plan) into a 3D isometric representation. The isometric view shows the object with its three principal dimensions at equal angles (120\\xb0 from each other), creating a realistic three-dimensional visualization that maintains true proportions along all three axes. This method effectively communicates the object's overall form and spatial relationships.\",\n                imagePath: \"/images/a8d1.jpg\",\n                questionImage: \"/images/a8q1d1.jpg\"\n            },\n            {\n                id: 2,\n                text: \"Figure shows Front view and Top view of an object, Draw isometric projection.\",\n                answer: \"This drawing illustrates the process of creating an isometric projection from front and top orthographic views. The isometric projection presents the object along three axes at equal angles (120\\xb0), with measurements maintained at full scale along these axes. This creates a three-dimensional representation that preserves proportional relationships while offering a comprehensive visualization of the object's geometry.\",\n                imagePath: \"/images/a8d2.jpg\",\n                questionImage: \"/images/a8q2d2.jpg\"\n            },\n            {\n                id: 3,\n                text: \"Draw isometric view.\",\n                answer: \"This isometric view transforms orthographic projections into a single three-dimensional representation. By placing the object along three equally spaced axes (at 120\\xb0 to each other), the drawing creates a realistic visualization that shows multiple faces simultaneously. This isometric technique effectively communicates the object's spatial characteristics and volumetric properties while maintaining consistent scale along all principal dimensions.\",\n                imagePath: \"/images/a8d3.jpg\",\n                questionImage: \"/images/a8q3d3.jpg\"\n            },\n            {\n                id: 4,\n                text: \"Draw (i) Full sectional Elevation (ii) Plan (iii) LHSV by Third angle method.\",\n                answer: \"This comprehensive drawing presents a full sectional elevation, plan view, and left-hand side view using third angle projection method. The sectional elevation reveals the internal configuration by showing the object cut along a vertical plane. The third angle arrangement positions the plan view above the elevation and the LHSV to the right, following standardized technical drawing conventions for clear communication of the object's features.\",\n                imagePath: \"/images/a8d4.jpg\",\n                questionImage: \"/images/a8q4d4.jpg\"\n            },\n            {\n                id: 5,\n                text: \"Draw (i) Elevation (ii) Plan (iii) RHSV by First angle method.\",\n                answer: \"This solution shows a complete set of orthographic views using first angle projection method. The drawing includes front elevation, plan view, and right-hand side view arranged according to first angle conventions (plan below elevation, RHSV to the left of elevation). This standardized arrangement provides a comprehensive representation of the object's form and dimensions for technical documentation purposes.\",\n                imagePath: \"/images/a8d5.jpg\",\n                questionImage: \"/images/a8q5d5.jpg\"\n            }\n        ]\n    }\n];\n// Export the array for use in other files\n/* harmony default export */ __webpack_exports__[\"default\"] = (assignmentsData);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./egcontent/assignmentscontent.js\n"));

/***/ })

});